import{_ as e,c as i,o as t,ae as r}from"./chunks/framework.DO_qJNgM.js";const J=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"interview/work_high.md","filePath":"interview/work_high.md"}'),l={name:"interview/work_high.md"};function o(n,a,_,p,s,c){return t(),i("div",null,a[0]||(a[0]=[r("<p>掌握多线程和并发（Thread，Executors、Fork-Join两个框架）<br> Thread是原生的线程，需要程序开发者自行管理。Executors、Fork-Join两个编程框架只需要专注业务逻辑的编写，而不需要考虑线程的具体管理。 <br></p><p>掌握网络编程（TCP/UDP的编程、NIO原理、以及Java Mail（即邮件编程）的编程）。 <br></p><p>掌握数据库编程（Connection/Statement/ResultSet/连接池），要熟知JDBC的这些关键的类，以及数据库连接池的设计和使用。 <br></p><p>混合编程（掌握原理，编程时候再查询API）。知道Java可以和另外一台机器的Java进行通讯，Java可以去调用其他程序所实现的程序，两者之间可以相互的互动，也就是说，Java这边可以调用外部的一个函数，然后取得外部函数的返回结果，这样一来，两个不同语言实现的程序，就可以互动起来。这就是混合编程的目的。</p><blockquote><p>掌握：</p><ul><li>Java语法糖</li><li>Java泛型和反射</li><li>Java代理和注解</li><li>嵌套类</li><li>Lambda表达式和Stream流处理</li><li>Java类加载机制和安全策略</li><li>Java模块化编程</li><li>Java字节码</li><li>JVM</li><li>内存管理</li></ul></blockquote><p>有了上述要点，框架软件才得以实现。</p>",6)]))}const d=e(l,[["render",o]]);export{J as __pageData,d as default};
