import{_ as e,c as o,o as t,ae as r}from"./chunks/framework.DO_qJNgM.js";const p=JSON.parse('{"title":"3/15","description":"","frontmatter":{},"headers":[],"relativePath":"springboot/oop.md","filePath":"springboot/oop.md"}'),i={name:"springboot/oop.md"};function l(n,a,s,h,d,c){return t(),o("div",null,a[0]||(a[0]=[r('<h1 id="_3-15" tabindex="-1">3/15 <a class="header-anchor" href="#_3-15" aria-label="Permalink to &quot;3/15&quot;">​</a></h1><h2 id="oop-面向对象编程" tabindex="-1">OOP(面向对象编程) <a class="header-anchor" href="#oop-面向对象编程" aria-label="Permalink to &quot;OOP(面向对象编程)&quot;">​</a></h2><h3 id="类创建对象" tabindex="-1">类创建对象 <a class="header-anchor" href="#类创建对象" aria-label="Permalink to &quot;类创建对象&quot;">​</a></h3><h3 id="java三特性" tabindex="-1">Java三特性： <a class="header-anchor" href="#java三特性" aria-label="Permalink to &quot;Java三特性：&quot;">​</a></h3><ul><li>继承 ：</li><li>封装 ：将变量局部化</li><li>多态 ：<br></li></ul><h3 id="javabean标准格式" tabindex="-1">JavaBean标准格式： <a class="header-anchor" href="#javabean标准格式" aria-label="Permalink to &quot;JavaBean标准格式：&quot;">​</a></h3><ol><li>具备空参、全参构造方法</li><li>注入get、set方法</li></ol>',7)]))}const u=e(i,[["render",l]]);export{p as __pageData,u as default};
