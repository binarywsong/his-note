import{_ as s,c as i,o as e,ae as t}from"./chunks/framework.DO_qJNgM.js";const k=JSON.parse('{"title":"Question","description":"","frontmatter":{},"headers":[],"relativePath":"springboot/question.md","filePath":"springboot/question.md"}'),l={name:"springboot/question.md"};function n(p,a,o,d,h,c){return e(),i("div",null,a[0]||(a[0]=[t('<h1 id="question" tabindex="-1">Question <a class="header-anchor" href="#question" aria-label="Permalink to &quot;Question&quot;">​</a></h1><ol><li>数据库连接失败</li></ol><div class="language-Java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">Java</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Failed to configure a DataSource</span></span></code></pre></div><p>检查application.properties中的数据库URL、用户、密码，或排除数据源配置：</p><div class="language-Java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">Java</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">@</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">SpringBootApplication</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">exclude</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {DataSourceAutoConfiguration.class})</span></span></code></pre></div><ol start="2"><li>Bean依赖缺失</li></ol><div class="language-Java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">Java</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">No qualifying bean of type </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;X&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> available</span></span></code></pre></div><p>确保依赖的类已被Spring管理（添加<code>@Component</code>、<code>@Service</code>等注解）或正确配置Bean方法</p><ol start="3"><li>端口占用</li></ol><div class="language-Java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">Java</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Web server failed to start.Port 8080...</span></span></code></pre></div><p>更换端口：server.port=8081或终止占用端口的进程</p><ol start="4"><li>配置文件错误</li></ol><div class="language-Java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">Java</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Could not resolve placeholder </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;xxx&#39;</span></span></code></pre></div><p>检查application.properties中的属性拼写，或确保<code>@Value</code>注入的健值存在</p><ol start="5"><li>依赖冲突/缺失</li></ol><div class="language-Java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">Java</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">ClassNotFoundException</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">/</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">NoClassDefFoundError</span></span></code></pre></div><p>检查pom.xml或build.gradle，确保依赖项完整且版本兼容</p><ol start="6"><li>循环依赖</li></ol><div class="language-Java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">Java</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Requested bean is currently in creation</span></span></code></pre></div><p>使用构造器注入替代字段注入，或用<code>@Lazy</code>延迟加载</p>',20)]))}const g=s(l,[["render",n]]);export{k as __pageData,g as default};
