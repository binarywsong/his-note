import{_ as s,c as t,o as i,ae as e}from"./chunks/framework.DO_qJNgM.js";const n="/his-note/assets/image37.D9XCCzOu.png",r="/his-note/assets/image38.BTi_FVSS.png",o="/his-note/assets/image39.YVDT_32L.png",b=JSON.parse('{"title":"每日小Tip","description":"","frontmatter":{},"headers":[],"relativePath":"springboot/tip.md","filePath":"springboot/tip.md"}'),p={name:"springboot/tip.md"};function l(h,a,c,d,u,_){return i(),t("div",null,a[0]||(a[0]=[e('<h1 id="每日小tip" tabindex="-1">每日小Tip <a class="header-anchor" href="#每日小tip" aria-label="Permalink to &quot;每日小Tip&quot;">​</a></h1><br><br><p><img src="'+n+'" alt=""><img src="'+r+'" alt=""><img src="'+o+`" alt=""></p><br><br><h2 id="前端允许跨域请求" tabindex="-1">前端允许跨域请求: <a class="header-anchor" href="#前端允许跨域请求" aria-label="Permalink to &quot;前端允许跨域请求:&quot;">​</a></h2><div class="language-Vue vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">Vue</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">server:{</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    host: &quot;localhost&quot;,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    port: 7600,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    cors: true</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><br><br><h2 id="大型网站在负载较大的情况下加载页面也很快是为什么" tabindex="-1">大型网站在负载较大的情况下加载页面也很快是为什么？ <a class="header-anchor" href="#大型网站在负载较大的情况下加载页面也很快是为什么" aria-label="Permalink to &quot;大型网站在负载较大的情况下加载页面也很快是为什么？&quot;">​</a></h2><p>这是因为大型的电商网站都会把首页的数据缓存到内存当中，当前端项目渲染首页的时候，后端只需要从内存中提取数据即可，不需要走数据库，所以首页加载速度就明显提升了。</p><br><br><h2 id="vue命令行指令" tabindex="-1">Vue命令行指令： <a class="header-anchor" href="#vue命令行指令" aria-label="Permalink to &quot;Vue命令行指令：&quot;">​</a></h2><ol><li>$ <code>git status</code>:查看暂存区情况，绿色已上传，红色未上传。</li></ol>`,16)]))}const k=s(p,[["render",l]]);export{b as __pageData,k as default};
